apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment.paymentBackend.name}}
  # labels:
  #   type: payment-backend-depl
spec:
  replicas: {{.Values.deployment.paymentBackend.replicas}}
  selector:
    matchLabels:
      type: backend
      service: {{.Values.deployment.paymentBackend.name}}
      language: go
  template:
    metadata:
      labels:
        type: backend
        service: {{.Values.deployment.paymentBackend.name}}
        language: go
    spec:
      containers:
        - name: payment-backend
          image: {{.Values.deployment.paymentBackend.image}}:{{.Values.deployment.paymentBackend.tag}}
          env:
            - name: DB_HOST
              value: payment-db-svc
            - name: DB_PASSWORD
              value: 'db@password'
            - name: CRYPTO_KEY
              value: '1234567812345678'
            - name: FRAUD_CLIENT_BASE_URL
              value: 'http://fraud-backend-svc:9002'
          imagePullPolicy: Never
          ports:
            - containerPort: {{.Values.deployment.paymentBackend.port}}
          livenessProbe: # pod is restarted if liveliness check fails because the pod faced an internal issue
            httpGet:
              path: /health
              port: {{.Values.deployment.paymentBackend.port}}
            initialDelaySeconds: 2
            periodSeconds: 5
          readinessProbe: # traffic from service won't be routed to this pod, as the service is working but some dependency failed(ex: db)
            httpGet:
              path: /health
              port: {{.Values.deployment.paymentBackend.port}}
            initialDelaySeconds: 2
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.service.paymentBackend.name}}
spec:
  type: ClusterIP
  selector:
    type: backend
    service: {{.Values.deployment.paymentBackend.name}}
    language: go
  ports:
    - port: {{.Values.service.paymentBackend.port}} #exposed port from the service
      targetPort: {{.Values.deployment.paymentBackend.port}} #exposed port from the pod
      protocol: TCP
