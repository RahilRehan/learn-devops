apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment.db.name}}
  # labels:
  #   type: payment-db
spec:
  replicas: 1
  selector:
    matchLabels:
      type: db
      vendor: postgres
  template:
    metadata:
      labels:
        type: db
        vendor: postgres
    spec:
      containers:
        - name: postgres-db
          image: postgres
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-cm
                  key: pg-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: pg-password
          ports:
            - containerPort: {{.Values.deployment.db.port}}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-claim

      volumes:
        - name: postgres-pv-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.service.db.name}}
spec:
  type: ClusterIP
  selector:
    type: db
    vendor: postgres
  ports:
    - port: {{.Values.service.db.port}}
      targetPort: {{.Values.deployment.db.port}} #exposed port from the pod
      protocol: TCP

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100M
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: '/mnt/data'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres
  name: postgres-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100M
